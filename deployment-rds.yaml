AWSTemplateFormatVersion: '2010-09-09'
Description: CFN template para crear un cluster de Aurora Postgres
Parameters:
  VpcId:
    Description: Seleccionar un ID de VPC
    Type: String
  SubnetId1:
    Description: Seleccionar un ID para la subnet 1 de VPC group
    Type: String
  SubnetId2:
    Description: Seleccionar un ID para la subnet 2 de VPC group
    Type: String
  AllowedCIDRCL:
    Description: Ingresar el CIDR que tendrá acceso a consultar la BD
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    Type: String
  AllowedCIDRBR:
    Description: Ingresar el CIDR que tendrá acceso a consultar la BD
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    Type: String
  AllowedCIDRVPC:
    Description: Ingresar el CIDR que tendrá acceso a consultar la BD
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    Type: String        
  DBName:
    Description: Nombre de la base de datos para la instancia de Aurora PostgreSQL DB
    Type: String
  DBMasterUsername:
    Description: Nombre de usuario master/superuser.
    Type: String
  DBInstanceClass:
    Description: Tipo de clase de instancia de BD (db.t3.micro, db.t2.large, etc)
    Type: String
    Default : db.t3.medium
  EnablePerformanceInsights:
    Description: Habilitar Performance Insights para la instancia de DB.
    Type: String
    Default: false
  MultiAZ:
    Description: Habilitar en caso de requerir multi AZ
    Type: String
    Default: false
  EncryptedStorage:
    Description: Habilitar encryption at rest 
    Type: String
    Default: true
  NombreAplicacion:
    Description: Nombre de la aplicacion
    Type: String
  Ambiente:
    Description: Ambiente de despliegue
    Type: String
    AllowedValues:
      - "prod"
      - "develop" 

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Networking
        Parameters:
          - VpcId
          - SubnetId1
          - SubnetId2
          - AllowedCIDRCL
          - AllowedCIDRBR
          - AllowedCIDRVPC
      - Label:
          default: Configuracion cluster
        Parameters:
          - DBName
          - DBMasterUsername
          - DBMasterUserPassword
          - DBInstanceClass
          - EnablePerformanceInsights
          - MultiAZ
          - EncryptedStorage
      - Label:
          default: Ambientacion de negocio
        Parameters:
          - NombreAplicacion
          - Ambiente
Resources:

  MySecretDB:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: MySecretDB
      Description: "Este secreto genera dinamicamente una secret password."
      GenerateSecretString:
        SecretStringTemplate: '{"username": "koadmin"}'
        GenerateStringKey: "password"
        PasswordLength: 20
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: Name
          Value: !Ref DBName
        - Key: Ambiente de despliegue
          Value: !Ref Ambiente


  DBCluster:
    DependsOn:
      - DBSubnetGroup
      - DBClusterPG
      - MySecretDB
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      DBClusterIdentifier: !Sub "${Ambiente}-${DBName}"
      DBClusterParameterGroupName: !Ref DBClusterPG
      DBSubnetGroupName: !Ref DBSubnetGroup
      DatabaseName: !Ref DBName
      DeletionProtection: false
      Engine: aurora-postgresql
      EngineMode: provisioned
      EngineVersion: 13.7
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref MySecretDB, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref MySecretDB, ':SecretString:password}}' ]]      
      Port: 5432
      SourceRegion: !Ref 'AWS::Region'
      StorageEncrypted: !Ref EncryptedStorage
      BackupRetentionPeriod: 30
      VpcSecurityGroupIds:
        - Ref: AuroraSecurityGroup
  DBClusterPG:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: DB Cluster Parameter Group for your Aurora DB cluster
      Family: aurora-postgresql13
      Parameters:
        rds.logical_replication: 1
  DBInstance:
    DependsOn:
      - DBSubnetGroup
      - DBParameterGroup
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub "${Ambiente}-${DBName}-instance"
      DBInstanceClass:
        Ref: DBInstanceClass
      Engine: aurora-postgresql
      EngineVersion: 13.7
      DBSubnetGroupName:
        Ref: DBSubnetGroup
      DBParameterGroupName:
        Ref: DBParameterGroup
      StorageEncrypted: !Ref EncryptedStorage
      EnablePerformanceInsights:
        Ref: EnablePerformanceInsights
      MultiAZ: !Ref MultiAZ
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      PubliclyAccessible: false
      DBClusterIdentifier: !Ref DBCluster
      Tags:
      - Key: Name
        Value: !Ref DBName
      - Key: Ambiente de despliegue
        Value: !Ref Ambiente
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: Database Parameter Group for your Aurora DB Instance
      Family: aurora-postgresql13
      Parameters:
        shared_preload_libraries: "pg_stat_statements, pg_hint_plan"
      Tags:
      - Key: Name
        Value: !Ref DBName
      - Key: Ambiente de despliegue
        Value: !Ref Ambiente
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet Grouo for Aurora DB Cluster
      SubnetIds:
        - Ref: SubnetId1
        - Ref: SubnetId2
      Tags:
      - Key: Name
        Value: !Ref DBName
      - Key: Ambiente de despliegue
        Value: !Ref Ambiente
  AuroraSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Habilita puerto del servicio postgres para conexion desde VPN Koandina y VPC
      VpcId: !Ref VpcId
      SecurityGroupIngress:
          - IpProtocol: TCP
            FromPort: 5432
            ToPort: 5432
            CidrIp: !Ref AllowedCIDRCL
          - IpProtocol: TCP
            FromPort: 5432
            ToPort: 5432
            CidrIp: !Ref AllowedCIDRBR            
          - IpProtocol: TCP
            FromPort: 5432
            ToPort: 5432
            CidrIp: !Ref AllowedCIDRVPC                
      Tags:
      - Key: Name
        Value: !Ref DBName
      - Key: Ambiente de despliegue
        Value: !Ref Ambiente
        
Outputs:
  RDSEndpoint:
    Description: RDS Database Endpoint
    Value:
      Fn::GetAtt:
        - DBInstance
        - Endpoint.Address
  ProxySecretArn:
    Description: Secret ARN DB
    Value: !GetAtt MySecretDB.Arn
  DBInstanceName:
    Description: DB Cluster Name
    Value: "cluster-koandina"